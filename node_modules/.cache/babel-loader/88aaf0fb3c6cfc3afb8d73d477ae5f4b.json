{"ast":null,"code":"var _jsxFileName = \"/Users/easycash/Desktop/documents/React-work/src/Context/ComponentsContext.js\";\nimport React, { createContext, useState } from \"react\";\nexport const ComponentsContext = createContext();\n\nconst ComponentsContextProvider = props => {\n  const [isShow, setIsShow] = useState(false);\n  const [isShowTwo, setIsShowTwo] = useState(false);\n\n  const toggle = () => {\n    setIsShow(!isShow);\n  };\n\n  const toggleTwo = () => {\n    setIsShow(!isShow);\n  };\n\n  return /*#__PURE__*/React.createElement(ComponentsContext.Provider, {\n    value: {\n      isShow,\n      toggle\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ComponentsContextProvider;","map":{"version":3,"sources":["/Users/easycash/Desktop/documents/React-work/src/Context/ComponentsContext.js"],"names":["React","createContext","useState","ComponentsContext","ComponentsContextProvider","props","isShow","setIsShow","isShowTwo","setIsShowTwo","toggle","toggleTwo","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,iBAAiB,GAAGF,aAAa,EAAvC;;AAEP,MAAMG,yBAAyB,GAAGC,KAAK,IAAI;AACzC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMQ,MAAM,GAAG,MAAM;AACnBH,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAIA,QAAMK,SAAS,GAAG,MAAM;AACtBJ,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAIA,sBACE,oBAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAAEA,MAAAA,MAAF;AAAUI,MAAAA;AAAV,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACO,QADT,CADF;AAKD,CAjBD;;AAmBA,eAAeR,yBAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const ComponentsContext = createContext();\n\nconst ComponentsContextProvider = props => {\n  const [isShow, setIsShow] = useState(false);\n  const [isShowTwo, setIsShowTwo] = useState(false);\n\n  const toggle = () => {\n    setIsShow(!isShow);\n  };\n\n  const toggleTwo = () => {\n    setIsShow(!isShow);\n  };\n\n  return (\n    <ComponentsContext.Provider value={{ isShow, toggle }}>\n      {props.children}\n    </ComponentsContext.Provider>\n  );\n};\n\nexport default ComponentsContextProvider;\n"]},"metadata":{},"sourceType":"module"}